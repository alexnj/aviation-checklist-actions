name: Compile Checklists

inputs:
  efis_editor_repository:
    description: 'The repository containing the efis-editor'
    type: string
    required: false
    default: 'rdamazio/efis-editor'
  efis_editor_ref:
    description: 'The branch, tag or SHA to checkout from the efis-editor repository'
    type: string
    required: false
    default: 'main'
  efis_editor_patch:
    description: 'The patch to apply to the efis-editor'
    type: string
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'

    - name: Copy a file
      run: cp -r ${{github.action_path}} _action
      shell: bash

    - name: Checkout EFIS file format editor repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.efis_editor_repository }}
        ref: ${{ inputs.efis_editor_ref }}
        path: _action/efis-editor

    - name: Install efis-editor dependencies
      run: npm install
      working-directory: _action/efis-editor
      shell: bash

    - name: Patch EFIS-editor with specific changes
      run: git apply ../efis-editor.patch
      working-directory: _action/efis-editor
      shell: bash

    - name: Generate efis-editor protobuf files
      run: npm run genproto
      working-directory: _action/efis-editor
      shell: bash

    - name: Generate efis-editor keys
      run: npm run genkeys
      working-directory: _action/efis-editor
      shell: bash

    - name: Install compiler dependencies
      run: npm install
      working-directory: _action/compiler
      shell: bash

    - name: Compile Compiler Typescript
      working-directory: _action/efis-editor
      run: npx tsc ../compiler/*.ts --module commonjs --esModuleInterop --target es2022 --lib es2022,dom --skipLibCheck
      shell: bash

    - name: Convert Checklist JSONs to EFIS
      run: node _action/compiler/compiler.js --checklistsDir=checklists --outputRootDir=output
      shell: bash
      working-directory: .

    - name: Setup gh actions artifact client
      uses: lhotari/gh-actions-artifact-client@v2

    - name: Upload artifacts
      id: upload
      run: |
        mkdir output-release
        find output -type f | while read -r file; do
          name=${file##*checklists/}
          final_name=${name//\//\.}
          echo "Uploading $name, file: $final_name"
          cp "$file" "output-release/$final_name"
          cat "$file" | gh-actions-artifact-client.js upload "${final_name}" --retentionDays=7
        done
        echo "::set-output name=artifact_path::output-release"
      shell: bash
      working-directory: .

    - uses: 'softprops/action-gh-release@v1'
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: 'latest'
        name: 'Automatic Release Build'
        body_path: 'output.md'
        prerelease: true
        files: |
          output-release/*
